<%@ jet 
imports="
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.process.IConnectionCategory
    org.talend.core.model.metadata.MappingTypeRetriever
    org.talend.core.model.metadata.MetadataTalendType    
	java.util.List
	java.util.ArrayList
	java.util.Map
	java.util.HashMap
"
skeleton="../templates/db_output_bulk.skeleton"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String dataAction = ElementParameterParser.getValue(node,"__DATA_ACTION__");
    String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
	String tableName = ElementParameterParser.getValue(node,"__TABLE__");
	String dbmsId = ElementParameterParser.getValue(node,"__MAPPING__");
	List<Map<String, String>> addCols = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__ADD_COLS__");
    boolean useFieldOptions = ("true").equals(ElementParameterParser.getValue(node, "__USE_FIELD_OPTIONS__"));
    List<Map<String, String>> fieldOptions = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__FIELD_OPTIONS__");
    String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
    String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
     boolean isEnableDebug = false;//not support.("true").equals(ElementParameterParser.getValue(node,"__ENABLE_DEBUG_MODE__"));
     
     boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
    //feature:2880
    getManager(dbmsId, cid, node);
    boolean whereSupportNull = ElementParameterParser.getValue(node, "__SUPPORT_NULL_WHERE__").equals("true");
	
	boolean useBatchSize = ("true").equals(ElementParameterParser.getValue(node,"__USE_BATCH_SIZE__"));
	String batchSize=ElementParameterParser.getValue(node,"__BATCH_SIZE__");
	
	String incomingConnName = null;
	List<IMetadataColumn> columnList = getColumnList(node);
	
	List< ? extends IConnection> conns = node.getIncomingConnections();
	if(conns!=null && conns.size()>0){
		IConnection conn = conns.get(0);
		incomingConnName = conn.getName();
	}
		
	String rejectConnName = null;
	List<? extends IConnection> rejectConns = node.getOutgoingConnections("REJECT");
	if(rejectConns != null && rejectConns.size() > 0) {
	    IConnection rejectConn = rejectConns.get(0);
	    rejectConnName = rejectConn.getName();
	}
	List<IMetadataColumn> rejectColumnList = null;
	IMetadataTable metadataTable = node.getMetadataFromConnector("REJECT");
	if(metadataTable != null) {
	    rejectColumnList = metadataTable.getListColumns();	    
	}
	
	List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();
    for(IConnection conn : outgoingConns) {
        if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
            %>        
            <%=conn.getName() %> = null;            
            <%      
        }
    }
	
	List<Column> stmtStructure = getManager(dbmsId, cid).createColumnList(columnList, useFieldOptions, fieldOptions, addCols);
	
    ////////////////////////////////////////////////////////////
    List<Column> colStruct =  new ArrayList();
    for(Column colStmt : stmtStructure){
    	if(!colStmt.isReplaced() && !colStmt.isAddCol()){
    		colStruct.add(colStmt);
    	}
    }


	boolean isParallelize ="true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__PARALLELIZE__"));
	
	if (isParallelize) { // bug0014422
		String tAsyncIn_cid = "";
		if(conns!=null && conns.size() > 0) {
			tAsyncIn_cid = conns.get(0).getSource().getUniqueName();
		}
		if(!"true".equals(useExistingConn)) {
	    	if(!("").equals(commitEvery)&&!("0").equals(commitEvery)) {
%>
				commitEvery_<%=cid%> = buffersSize_<%=tAsyncIn_cid%>;
<%
	    	}
    	}
		if (useBatchSize) {
		    if(!("").equals(batchSize)&&!("0").equals(batchSize)) {
%>
				batchSize_<%=cid%> = buffersSize_<%=tAsyncIn_cid%>;
<%
		    }
    	}
%>
		
<%
	}
	

    if(incomingConnName != null && columnList != null){
        %>
        whetherReject_<%=cid%> = false;
        <%	
        if(("INSERT").equals(dataAction)){
                int counter = 1;
    	
                for(Column column : colStruct) {
                    if(column.isInsertable()) {
                        String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getColumn().getTalendType(), column.getColumn().isNullable());
                        %>
                        <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, column, counter, incomingConnName, cid, NORMAL_TYPE)%>
                        <%
                        counter++;                        
                    }		

                }
                %>
               <%if (rejectConnName == null && useBatchSize){
    			%>
                    pstmt_<%=cid %>.addBatch();
                    nb_line_<%=cid%>++;
                    <%if(!("").equals(batchSize) && !("0").equals(batchSize)){%>
					batchSizeCounter_<%=cid%>++;
					<%}%>
                <%}else{%>
				try{
					nb_line_<%=cid%>++;
					insertedCount_<%=cid%> = insertedCount_<%=cid%> + pstmt_<%=cid %>.executeUpdate();
                }catch(java.lang.Exception e)
                {
                    whetherReject_<%=cid%> = true;
                    <%
                    if (("true").equals(dieOnError)) {
                        %>
		                <%if(isLog4jEnabled){%>
							log.fatal("<%=cid%> - " + e.getMessage());
						<%}%>
                        throw(e);
                        <%
                    } else {
		                if(isLog4jEnabled){%>
							log.error("<%=cid%> - " + e.getMessage());
						<%}
                        if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {%>
                            <%=rejectConnName %> = new <%=rejectConnName %>Struct();
                            <%
                            for(IMetadataColumn column : columnList) {
                                %>
                                <%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                                <%
                            }
                            %>
                            rejectedCount_<%=cid%> = rejectedCount_<%=cid%> + 1;
                            <%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
                            <%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
                            <%
                        } else {
                            %>
                            System.err.print(e.getMessage());
                            <%
                        }
                    } 
                    %>
                }
                <%
            }
    	}else if(("UPDATE").equals(dataAction)){
    		int counterCol = 1;
    		
    		for(Column column : colStruct) {
    			if(column.isUpdatable()) {
    			    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getColumn().getTalendType(), column.getColumn().isNullable());
    			    %>
    			    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, column, counterCol, incomingConnName, cid, NORMAL_TYPE)%>
    			    <%
                    counterCol++;    			    
    			}
    		}
    
    		for(Column column:colStruct){
    			if(column.isUpdateKey()) {
    			    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getColumn().getTalendType(), column.getColumn().isNullable());
    			    String dbType = column.getColumn().getType();
                    %>
                    
					<% 
                    //#############for feature:2880 and 6980
                    if(whereSupportNull && column.getColumn().isNullable()) { %>
                    	<%=getManager(dbmsId, cid, node).generateSetBooleanForNullableKeyStmt(column, counterCol, incomingConnName, cid, NORMAL_TYPE)%>
                    <%  
					if(isEnableDebug) {
                        %>
                        query_<%=cid%> = <%=getManager(dbmsId, cid).retrieveSQL(typeToGenerate, column, incomingConnName, cid, "query_" , counterCol, "updateSQLSplits_", "(("+incomingConnName+"."+column.getName()+"==null)?1:0)")%>;
                        <%
                    }
                    	counterCol++;
                       }
                     //#############                      
                    %>  
    			    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, column, counterCol, incomingConnName, cid, NORMAL_TYPE)%>
    			    <%
    			    counterCol++;
    			}
    		}
    
    		%>
    		<%if (rejectConnName == null && useBatchSize ) { // whether use batch
    		%>
    		pstmt_<%=cid %>.addBatch();
    		nb_line_<%=cid%>++;    		 
			
    		  <%if (useBatchSize && !("").equals(batchSize) && !("0").equals(batchSize)) {
    		  %>
    		  batchSizeCounter_<%=cid%>++;
    		  <%
    		  }%>    		
    		<%
    		}else {    		
    		%>
            try{
                nb_line_<%=cid%>++;
                updatedCount_<%=cid%> = updatedCount_<%=cid%> + pstmt_<%=cid %>.executeUpdate();
            }catch(java.lang.Exception e)
            {
                whetherReject_<%=cid%> = true;
                <%
                if (("true").equals(dieOnError)) {
                    %>
	                <%if(isLog4jEnabled){%>
						log.fatal("<%=cid%> - " + e.getMessage());
					<%}%>
                    throw(e);
                    <%
                } else {
	                if(isLog4jEnabled){%>
						log.error("<%=cid%> - " + e.getMessage());
					<%}
                    if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {%>
                        <%=rejectConnName %> = new <%=rejectConnName %>Struct();
                    <%
                        for(IMetadataColumn column : columnList) {
                            %>
                            <%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                            <%
                        }
                        %>
                        rejectedCount_<%=cid%> = rejectedCount_<%=cid%> + 1;
                        <%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
                        <%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
                        <%
                    } else {
                        %>
                        System.err.print(e.getMessage());
                        <%
                    }
                } 
                %>
            }
			<%
            } // end whether use batch
            %>
            <%
    	}else if (("INSERT_OR_UPDATE").equals(dataAction)){
    	    %>
    
    	    <%
    		int columnIndex = 1;
    		for(Column column : colStruct)
    		{
    			if(column.isUpdateKey()) {
    			    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getColumn().getTalendType(), column.getColumn().isNullable());
    			    String dbType = column.getColumn().getType();
                    %>
					<% 
                    //#############for feature:2880 and 6980
                    if(whereSupportNull && column.getColumn().isNullable()) { %>
                    	<%=getManager(dbmsId, cid, node).generateSetBooleanForNullableKeyStmt(column, columnIndex, incomingConnName, cid, NORMAL_TYPE)%>
                    <%  
                    	columnIndex++;
                       }
                     //#############                      
                    %>
    			    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, column, columnIndex, incomingConnName, cid, NORMAL_TYPE)%>
    			    <%
    			    columnIndex++;
    			}
    		}
    		%>
    
    		java.sql.ResultSet rs_<%=cid%> = pstmt_<%=cid %>.executeQuery();
    		int checkCount_<%=cid%> = -1;
    		while(rs_<%=cid%>.next())
    		{
    			checkCount_<%=cid%> = rs_<%=cid%>.getInt(1);
    		}
    		if(checkCount_<%=cid%> > 0)
    		{
    			<%
    			int counterCol = 1;
    			for(Column column : colStruct)
    			{
    				if(column.isUpdatable()) {
    				    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getColumn().getTalendType(), column.getColumn().isNullable());
    				    %>
    				    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, column, counterCol, incomingConnName, cid, UPDATE_TYPE)%>
    				    <%
    				    counterCol++;
    				}
    			}
    			for(Column column : colStruct)
    			{
    				if(column.isUpdateKey()) {
    				    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getColumn().getTalendType(), column.getColumn().isNullable());
    				    String dbType = column.getColumn().getType();
                        %>
                        <% 
	                    //#############for feature:2880
	                    if(whereSupportNull && column.getColumn().isNullable()) { %>
	                    	<%=getManager(dbmsId, cid, node).generateSetBooleanForNullableKeyStmt(column, counterCol, incomingConnName, cid, UPDATE_TYPE)%>
	                    <%  
		                     if(isEnableDebug) {
	                        %>
	                        query_<%=cid%> = <%=getManager(dbmsId, cid).retrieveSQL(typeToGenerate, column, incomingConnName, cid, "query_" , counterCol, "updateSQLSplits_", "(("+incomingConnName+"."+column.getName()+"==null)?1:0)")%>;
	                        <%
	                    	} 
	                    	counterCol++;
	                       }
	                     //#############                      
	                    %>
    				    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, column, counterCol, incomingConnName, cid, UPDATE_TYPE)%>
    				    <%
    				    counterCol++;				    
    				}
    			}
    			%>
                try{
                    updatedCount_<%=cid%> = updatedCount_<%=cid%> + pstmtUpdate_<%=cid %>.executeUpdate();
                }catch(java.lang.Exception e)
                {
                    whetherReject_<%=cid%> = true;
                    <%
                    if (("true").equals(dieOnError)) {
                        %>
		                <%if(isLog4jEnabled){%>
							log.fatal("<%=cid%> - " + e.getMessage());
						<%}%>
                        throw(e);
                        <%
                    } else {
		                if(isLog4jEnabled){%>
							log.error("<%=cid%> - " + e.getMessage());
						<%}
                        if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {%>
                        <%=rejectConnName %> = new <%=rejectConnName %>Struct();
                        <%
                            for(IMetadataColumn column : columnList) {
                                %>
                                <%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                                <%
                            }
                            %>
                            rejectedCount_<%=cid%> = rejectedCount_<%=cid%> + 1;
                            <%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
                            <%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
                            <%
                        } else {
                            %>
                            System.err.print(e.getMessage());
                            <%
                        }
                    } 
                    %>
                }
    		}
    		else
    		{
    			<%
    			int counterInsert = 1;
    			for(Column columnInsert : colStruct)
    			{
    				if(columnInsert.isInsertable()) {
    				    String typeToGenerate = JavaTypesManager.getTypeToGenerate(columnInsert.getColumn().getTalendType(), columnInsert.getColumn().isNullable());
    				    %>
    				    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, columnInsert, counterInsert, incomingConnName, cid, INSERT_TYPE)%>
    				    <%
    				    counterInsert++;
    				}
    			}
    			%>
                try{
                    insertedCount_<%=cid%> = insertedCount_<%=cid%> + pstmtInsert_<%=cid %>.executeUpdate();
                }catch(java.lang.Exception e)
                {
                    whetherReject_<%=cid%> = true;
                    <%
                    if (("true").equals(dieOnError)) {
                        %>
		                <%if(isLog4jEnabled){%>
							log.fatal("<%=cid%> - " + e.getMessage());
						<%}%>
                        throw(e);
                        <%
                    } else {
		                if(isLog4jEnabled){%>
							log.error("<%=cid%> - " + e.getMessage());
						<%}
                        if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {%>
                        <%=rejectConnName %> = new <%=rejectConnName %>Struct();
                        <%
                            for(IMetadataColumn column : columnList) {
                                %>
                                <%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                                <%
                            }
                            %>
                            rejectedCount_<%=cid%> = rejectedCount_<%=cid%> + 1;
                            <%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
                            <%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
                            <%
                        } else {
                            %>
                            System.err.print(e.getMessage());
                            <%
                        }
                    } 
                    %>
                }
    		}
    		nb_line_<%=cid%>++;
    		<%
    	}else if (("UPDATE_OR_INSERT").equals(dataAction)){
    	    %>
    	    int updateFlag_<%=cid%>=0;
    	    <%
    		int counterColUpdate = 1;
    		for(Column columnUpdate : colStruct) {
    			if(columnUpdate.isUpdatable()) {
    			    String typeToGenerate = JavaTypesManager.getTypeToGenerate(columnUpdate.getColumn().getTalendType(), columnUpdate.getColumn().isNullable());
    			    %>
    			    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, columnUpdate, counterColUpdate, incomingConnName, cid, UPDATE_TYPE)%>
    			    <%
    			    counterColUpdate++;
    			}
    		}
    
    		for(Column columnUpdate : colStruct) {
    			if(columnUpdate.isUpdateKey()) {
    			    String typeToGenerate = JavaTypesManager.getTypeToGenerate(columnUpdate.getColumn().getTalendType(), columnUpdate.getColumn().isNullable());
    			    String dbType = columnUpdate.getColumn().getType();
                    %>
					<% 
                    //#############for feature:2880 and 6980
                    if(whereSupportNull && columnUpdate.getColumn().isNullable()) { %>
                    	<%=getManager(dbmsId, cid, node).generateSetBooleanForNullableKeyStmt(columnUpdate, counterColUpdate, incomingConnName, cid, UPDATE_TYPE)%>
                    <%  
	                    if(isEnableDebug) {
	                        %>
	                        query_<%=cid%> = <%=getManager(dbmsId, cid).retrieveSQL(typeToGenerate, columnUpdate, incomingConnName, cid, "query_" , counterColUpdate, "updateSQLSplits_", "(("+incomingConnName+"."+columnUpdate.getName()+"==null)?1:0)")%>;
	                        <%
	                    	}
                    	counterColUpdate++;
                       }
                     //#############                      
                    %>
    			    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, columnUpdate, counterColUpdate, incomingConnName, cid, UPDATE_TYPE)%>
    			    <%
    			    counterColUpdate++;
    			}
    		}
    		%>
    	
            try{
                updateFlag_<%=cid%>=pstmtUpdate_<%=cid %>.executeUpdate();
                updatedCount_<%=cid%> = updatedCount_<%=cid%>+updateFlag_<%=cid%>;
                
            }catch(java.lang.Exception e)
            {
                whetherReject_<%=cid%> = true;
                <%
                if (("true").equals(dieOnError)) {
                    %>
	                <%if(isLog4jEnabled){%>
						log.fatal("<%=cid%> - " + e.getMessage());
					<%}%>
                    throw(e);
                    <%
                } else {
	                if(isLog4jEnabled){%>
						log.error("<%=cid%> - " + e.getMessage());
					<%}
                    if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {%>
                        <%=rejectConnName %> = new <%=rejectConnName %>Struct();
                    <%
                        for(IMetadataColumn column : columnList) {
                            %>
                            <%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                            <%
                        }
                        %>
                        rejectedCount_<%=cid%> = rejectedCount_<%=cid%> + 1;
                        <%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
                        <%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
                        <%
                    } else {
                        %>
                        System.err.print(e.getMessage());
                        <%
                    }
                } 
                %>
            }
            if(updateFlag_<%=cid%> == 0) {
        		<%
        		int counter = 1;
        		
        		for(Column column : colStruct) {
        			if(column.isInsertable()) {
        			    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getColumn().getTalendType(), column.getColumn().isNullable());
        			    %>
        			    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, column, counter, incomingConnName, cid, INSERT_TYPE)%>
        			    <%
        			    counter++;
        			}
        		}
        		%>
                try{
                    insertedCount_<%=cid%> = insertedCount_<%=cid%> + pstmtInsert_<%=cid %>.executeUpdate();
                }catch(java.lang.Exception e)
                {
                    whetherReject_<%=cid%> = true;
                    <%
                    if (("true").equals(dieOnError)) {
                        %>
		                <%if(isLog4jEnabled){%>
							log.fatal("<%=cid%> - " + e.getMessage());
						<%}%>
                        throw(e);
                        <%
                    } else {
		                if(isLog4jEnabled){%>
							log.error("<%=cid%> - " + e.getMessage());
						<%}
                        if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {
                            for(IMetadataColumn column : columnList) {
                                %>
                                <%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                                <%
                            }
                            %>
                            rejectedCount_<%=cid%> = rejectedCount_<%=cid%> + 1;
                            <%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
                            <%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
                            <%
                        } else {
                            %>
                            System.err.print(e.getMessage());
                            <%
                        }
                    } 
                    %>
                }
            }
            nb_line_<%=cid%>++;
            <%
    	
    	}else if (("DELETE").equals(dataAction)){
    		int keyCounter = 1;
    		for(Column column : colStruct) {
    			if(column.isDeleteKey()) {
    			    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getColumn().getTalendType(), column.getColumn().isNullable());
    			    String dbType = column.getColumn().getType();
                    %>
					<% 
                    //#############for feature:2880 and 6980
                    if(whereSupportNull && column.getColumn().isNullable()) { %>
                    	<%=getManager(dbmsId, cid, node).generateSetBooleanForNullableKeyStmt(column, keyCounter, incomingConnName, cid, NORMAL_TYPE)%>
                    <%  
	                    if(isEnableDebug) {
	                        %>
	                        query_<%=cid%> = <%=getManager(dbmsId, cid).retrieveSQL(typeToGenerate, column, incomingConnName, cid, "query_" , keyCounter, "deleteSQLSplits_", "(("+incomingConnName+"."+column.getName()+"==null)?1:0)")%>;
	                        <%
	                    	}
                    	 keyCounter++;
                       }
                     //#############                      
                    %>
    			    <%=getManager(dbmsId, cid).generateSetStmt(typeToGenerate, column, keyCounter, incomingConnName, cid, NORMAL_TYPE)%>
    			    <%
    			    keyCounter++;
    			}
    		}
    	%>
    	<%if (rejectConnName == null && useBatchSize) { // whether use batch
    		%>
    		pstmt_<%=cid %>.addBatch();
    		nb_line_<%=cid%>++;    		 
			
    		  <%if (!("").equals(batchSize) && !("0").equals(batchSize)) {
    		  %>
    		  batchSizeCounter_<%=cid%>++;
    		  <%
    		  }%>    		
    		<%
    		}else {    		
    		%>
        try{
    	    deletedCount_<%=cid%> = deletedCount_<%=cid%> + pstmt_<%=cid %>.executeUpdate();
        }catch(java.lang.Exception e)
        {
            whetherReject_<%=cid%> = true;
            <%
            if (("true").equals(dieOnError)) {
                %>
	            <%if(isLog4jEnabled){%>
					log.fatal("<%=cid%> - " + e.getMessage());
				<%}%>
                throw(e);
                <%
            } else {
	            if(isLog4jEnabled){%>
					log.error("<%=cid%> - " + e.getMessage());
				<%}
                if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {%>
                <%=rejectConnName %> = new <%=rejectConnName %>Struct();
                <%
                    for(IMetadataColumn column : columnList) {
                        %>
                        <%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                        <%
                    }
                    %>
                    rejectedCount_<%=cid%> = rejectedCount_<%=cid%> + 1;
                    <%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
                    <%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
                    <%
                } else {
                    %>
                    System.err.print(e.getMessage());
                    <%
                }
            } 
            %>
        }
        nb_line_<%=cid%>++;
			<%
            } // end whether use batch
            %>
    	<%
    	}
    	
    	if(isLog4jEnabled){
			int count = 0;
			for(IMetadataColumn column : columnList) {
				count++;
		%>
                log4jSb_<%=cid%>.append(<%=incomingConnName%>.<%=column.getLabel()%>);
                <%if(count < columnList.size()){%>
                	log4jSb_<%=cid%>.append("|");
                <%}
            }%>
			log.debug("<%=cid%> - Writing the record " + nb_line_<%=cid%> + " " + log4jSb_<%=cid%>);
			log4jSb_<%=cid%>.delete(0,log4jSb_<%=cid%>.length());
		<%}
		
        if(outgoingConns != null && outgoingConns.size() > 0) {
            %>
            if(!whetherReject_<%=cid%>) {
            <%
                for(IConnection outgoingConn : outgoingConns) {
                    if(rejectConnName == null || (rejectConnName != null && !outgoingConn.getName().equals(rejectConnName))) {
                        if(outgoingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
                            
                            %>
                            <%=outgoingConn.getName()%> = new <%=outgoingConn.getName()%>Struct();
                            <%
                            for(IMetadataColumn column : columnList) {
                                %>
                                <%=outgoingConn.getName()%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                                <%                  
                            }
                        }
                    }
                }
            %>
            }
            <%
        }	
		if (useBatchSize &&(rejectConnName==null)) {
    		if(!("").equals(batchSize) && !("0").equals(batchSize)) {
    		%>
    			if ( batchSize_<%=cid%> <= batchSizeCounter_<%=cid%>) {                
                <%if ((("INSERT").equals(dataAction) || ("UPDATE").equals(dataAction) || ("DELETE").equals(dataAction))) {
                %>                                                
                try {
            	    	batchSizeCounter_<%=cid%> = 0;
            	 		<%if(isLog4jEnabled) {%>
    					log.debug("<%=cid%> - Executing the <%=dataAction%> batch.");
    					<%}%>
						pstmt_<%=cid %>.executeBatch();                	
						pstmt_<%=cid %>.clearBatch();
			    		<%if(isLog4jEnabled) {%>
			    		log.debug("<%=cid%> - The <%=dataAction%> batch execution has succeeded.");
			    		<%}%>
            	    	<%
            	    	 if (("INSERT").equals(dataAction)) {
            	    	%>
            	    		insertedCount_<%=cid%> += pstmt_<%=cid %>.getUpdateCount();
            	    	<%
            	    	}else if (("UPDATE").equals(dataAction)) {
            	    	%>
            	    		updatedCount_<%=cid%> += pstmt_<%=cid %>. getUpdateCount();
            	    	<%
            	    	}else if (("DELETE").equals(dataAction)) {
            	    	%>
            	    	    deletedCount_<%=cid%> += pstmt_<%=cid %>. getUpdateCount();
            	    	<%
            	    	}%>                         	    	
                }catch (java.sql.BatchUpdateException e){
                	<%if(("true").equals(dieOnError)) {
                	%>
		                <%if(isLog4jEnabled){%>
							log.fatal("<%=cid%> - " + e.getMessage());
						<%}%>
						throw(e);
                	<%
                	}else {
                	%>
	                <%if(isLog4jEnabled){%>
						log.error("<%=cid%> - " + e.getMessage());
					<%}%>
                	System.err.println(e.getMessage());
                	<%
                	}%>
                
                }catch (java.sql.SQLException e){
	                <%if(isLog4jEnabled){%>
						log.error("<%=cid%> - " + e.getMessage());
					<%}%>
                	<%if(("true").equals(dieOnError)) {
                	%>
                		throw(e);
                	<%
                	}else {
                	%>
                	System.err.println(e.getMessage());
                	<%
                	}%>
                }
                <%
                }%>    			
    			
    			
    			
    			}
    		<%	
    		}
    	
    	}	
    	
    	////////////commit every////////////
    	if(!("true").equals(useExistingConn))
    	{
    		if(!("").equals(commitEvery)&&!("0").equals(commitEvery)){
    	%>
        	    commitCounter_<%=cid%>++;
        
                if(commitEvery_<%=cid%> <= commitCounter_<%=cid%>){
				<%if (useBatchSize && (rejectConnName==null) && (("INSERT").equals(dataAction) || ("UPDATE").equals(dataAction) || ("DELETE").equals(dataAction)) ) {
                %>
                try {
            	 		<%if(isLog4jEnabled) {%>
    					log.debug("<%=cid%> - Executing the <%=dataAction%> batch.");
    					<%}%>
					if(batchSizeCounter_<%=cid%> >0){
						batchSizeCounter_<%=cid%> = 0;
                		pstmt_<%=cid %>.executeBatch();
                		pstmt_<%=cid %>.clearBatch();
            		}
			    		<%if(isLog4jEnabled) {%>
			    		log.debug("<%=cid%> - The <%=dataAction%> batch execution has succeeded.");
			    		<%}%>
            	    	<%if (("INSERT").equals(dataAction)) {
            	    	%>
            	    		insertedCount_<%=cid%> += pstmt_<%=cid %>.getUpdateCount();
            	    	<%
            	    	}else if (("UPDATE").equals(dataAction)) {
            	    	%>            	    		
            	    		updatedCount_<%=cid%> += pstmt_<%=cid %>.getUpdateCount();
            	    	<%
            	    	}else if (("DELETE").equals(dataAction)) {
            	    	%>
            	    	    deletedCount_<%=cid%> += pstmt_<%=cid %>.getUpdateCount();
            	    	<%
            	    	}%>            	    
                }catch (java.sql.BatchUpdateException e){
                	<%if(("true").equals(dieOnError)) {
                	%>
		                <%if(isLog4jEnabled){%>
							log.fatal("<%=cid%> - " + e.getMessage());
						<%}%>
						throw(e);
                	<%
                	}else {
                	%>
		                <%if(isLog4jEnabled){%>
							log.error("<%=cid%> - " + e.getMessage());
						<%}%>
                        System.out.println(e.getMessage());
                	<%
                	}%>
                
                }catch (java.sql.SQLException e){
                	<%if(("true").equals(dieOnError)) {
                	%>
		                <%if(isLog4jEnabled){%>
							log.fatal("<%=cid%> - " + e.getMessage());
						<%}%>
                		throw(e);
                	<%
                	}else {
                	%>
	                <%if(isLog4jEnabled){%>
						log.error("<%=cid%> - " + e.getMessage());
					<%}%>
                	System.err.println(e.getMessage());
                	<%
                	}%>
                }            	                              
                <%
                }%>
					<%if(isLog4jEnabled){%>
						log.info("<%=cid%> - Starting to commit " + commitCounter_<%=cid%> + " records.");
					<%}%>
                	conn_<%=cid%>.commit();
					<%if(isLog4jEnabled){%>
						log.info("<%=cid%> - Commit has succeeded.");
					<%}%>
                	commitCounter_<%=cid%>=0;
                
                }	
    
    	<%
    		}
    	}
    }
    %>
